1. Write a code snippet that sets a to an array of n random integers between 0
(inclusive) and n (exclusive).

2. Write a loop that swaps adjacent elements of an array of integers. For example,
Array(1, 2, 3, 4, 5) becomes Array(2, 1, 4, 3, 5).

3. Given an array of integers, produce a new array that contains all positive
values of the original array, in their original order, followed by all values that
are zero or negative, in their original order.
vd: Array[Int](-5, -4, 0, -3, -2, -1, 1, 3, 4, 5, 2) -> Array(1, 3, 4, 5, 2, -5, -4, 0, -3, -2, -1)

4. How do you compute the average of an Array[Double]?

5. How do you rearrange the elements of an Array[Int] so that they appear in
reverse sorted order? 
vd: (30,42,51,4,25) -> (51,42,30,25,4)

6. Write a code snippet that produces all values from an array with duplicates
removed. 

7. Make a collection of all time zones returned by java.util.TimeZone.getAvailableIDs
that are in America. Strip off the "America/" prefix and sort the result.

8. Write a class BankAccount with methods deposit and withdraw, and a read-only
property balance.

9. Write a class Time with read-only properties hours and minutes and a method
before(other: Time): Boolean that checks whether this time comes before the
other. A Time object should be constructed as new Time(hrs, min), where hrs is in
military time format (between 0 and 23).

10. Reimplement the Time class from the preceding exercise so that the internal representation is the number of minutes
since midnight (between 0 and 24 × 60 – 1).

11. Write a class Person with a primary constructor that accepts a string containing
a first name, a space, and a last name, such as new Person("Fred Smith"). Supply
read-only properties firstName and lastName